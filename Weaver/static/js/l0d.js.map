{"version":3,"sources":["components/L0D-parts-standards.jsx","components/Helpers.js","L0D-main.jsx","index.js"],"names":["L0DPartsStandards","loop","name","enzyme","bases_upto_snip","receiver_ohs","oh5","oh3","domestication_enzymes","default","5","3","ohs","a","oh","b","c","d","tc","e","stop","f","x","gb","nt01","nt02","nt03","tr11","tr12","tr13","tr14","tr15","tr16","tr17","nt21","nt213","moclo","p5","p3u5","u3sp5","sp3cds5","cds3t5","t3","clearSequence","sequence","replace","complement","A","T","G","C","t","g","getReverseComplementSequenceString","split","reverse","join","getReverseSequenceString","map","getComplementSequenceString","tmSeq","seq","tm","length","seq_final","i","calculateTm","substring","Highlight","this","props","text","overlay_text","type","extra","OverlayTrigger","placement","overlay","Tooltip","id","key","className","Component","InputOHS","standard","Form","Select","onChange","handler","value","cv","aria-label","ref","Object","keys","OHInput","FloatingLabel","controlId","label","Primer","data-cc","PrimerDesign","fragment_name","idx","primers","finalSeq","eswen","extra5","template","extra3","method","method_text","tm_warning","pcrMinLength","push","tmSeq_dir","pcrTm","tmSeq_rc","finalSeq_fwd","finalSeq_rev","ResEditor","resInputHandle","v","undefined","new_res","res","letter","toLowerCase","triplet","getNucleotidesFromIUPAC","alternatives","firstLetterVariations","charAt","sub_alternatives","generateVariations","forEach","firstLetterVariation","sub_alternative","domesticate","alert","aminoAcidToDegenerateDnaMap","getAminoAcidFromSequenceTriplet","results","result","start","variation","getVariation","equal_warwing","diferent_length_warwing","frame_string","recommended_codon","FormControl","target","onClick","end","Fragments","state","setState","re","nextProps","seq1","seq2","Math","min","query","firstIndex","diffFound","lastIndex","lastCommonIndex","firstCommonIndexAfterDiff","diff","len","toUpperCase","output","final_sequence","final_sequence_txt","domestication_output","fragments","minOhLengthAlert","stop_codon","oh_length","abs","the_re","topSnipOffset","bottomSnipOffset","doh5","from","commonStart","resParts","formatOH","formatOHEnd","doh3","fragments_output","fragment","href","rel","L0D","tcInputChangeHandle","event","basePairsFromEndInputChangeHandle","base_pairs_from_end","domEnzymesInputChangeHandle","newEnzymes","enzymes","pcrMinLengthInputChangeHandle","pcrTmInputChangeHandle","nameInputChangeHandle","sequenceInputChangeHandle","partStandardChangeHandle","OH5InputChangeHandle","OH3InputChangeHandle","customOh5InputHandle","custom_oh5","customOh3InputHandle","custom_oh3","partStandardInputItems","getEnzymesSelect","domesticationEnzymesOutput","aliasedEnzymesByName","default_standard","targets","q","window","onReady","custom_oh5_input","custom_oh3_input","the_standard","domesticationEnzymesOptions","k","isType2S","sequenceInput","RES","enzyme_name","cutSites","getCutsitesFromSequence","restrictionSites","entries","enzymeCut","recognitionSiteRange","sort","restrictionSite","enzymeSiteWithExtraNucl","site","atg_output","stop_output","atg_found","findInFrame","stop_found","Container","Row","Col","lg","as","Text","options","isMulti","classNamePrefix","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1744d3c2.chunk.js","sourcesContent":["const L0DPartsStandards = {\n  loop: {\n    name: 'Loop',\n    enzyme: 'sapi',\n    bases_upto_snip: 'a',\n    receiver_ohs: {\n      oh5: 'TCC',\n      oh3: 'CGA'\n    },\n    domestication_enzymes:[\n        'aari',\n        'bsai',\n        'sapi'\n    ],\n    default: {\n      5: 'a',\n      3: 'b'\n    },\n    ohs: {\n      a: {\n        name: 'A',\n        oh: 'GGAG'\n      },\n      b: {\n        name: 'B',\n        oh: 'TACT'\n      },\n      c: {\n        name: 'C',\n        oh: 'AATG'\n      },\n      d: {\n        name: 'D',\n        oh: 'AGGT',\n        tc: true\n      },\n      e: {\n        name: 'E',\n        oh: 'GCTT',\n        stop: true\n      },\n      f: {\n        name: 'F',\n        oh: 'CGCT'\n      },\n      x: {\n        name: 'X',\n        oh: 'TGGA',\n        tc: true\n      },\n    }\n  },\n  gb: {\n    name:\"GoldenBraid 2.0\",\n    enzyme: 'bsmbi',\n    bases_upto_snip: 'a',\n    domestication_enzymes:[\n      'bsai',\n      'bsmbi'\n    ],\n    receiver_ohs: {\n      oh5: '',\n      oh3: ''\n    },\n    default: {\n      5: 'nt01',\n      3: 'tr13'\n    },\n    ohs: {\n      nt01: {\n        name: '5\\'NT 01 5\\'',\n        oh: 'GGAG'\n      },\n      nt02: {\n        name: '5\\'NT 02 5\\'',\n        oh: 'TGAC'\n      },\n      nt03: {\n        name: '5\\'NT 03 5\\'',\n        oh: 'TCCC'\n      },\n      tr11: {\n        name: 'TR 11 5\\'',\n        oh: 'TACT'\n      },\n      tr12: {\n        name: 'TR 12 5\\'',\n        oh: 'CCAT'\n      },\n      tr13: {\n        name: 'TR 13 5\\'',\n        oh: 'AATG'\n      },\n      tr14: {\n        name: 'TR 14 5\\'',\n        oh: 'AGCC',\n        tc: true\n      },\n      tr15: {\n        name: 'TR 15 5\\'',\n        oh: 'TTCG',\n        tc: true\n      },\n      tr16: {\n        name: 'TR 16 5\\'',\n        oh: 'GCAG',\n        tc: true\n      },\n      tr17: {\n        name: 'TR 17 5\\'',\n        oh: 'GCTT'\n      },\n      nt21: {\n        name: '3\\'NT 21 5\\'',\n        oh: 'GGTA'\n      },\n      nt213: {\n        name: '3\\'NT 21 3\\'',\n        oh: 'CGCT'\n      },\n    }\n  },\n  moclo:{\n    name: 'MoClo',\n    enzyme: 'bpii',\n    bases_upto_snip: 'aa',\n    default: {\n      5: 'p5',\n      3: 'p3u5'\n    },\n    receiver_ohs: {\n      oh5: '',\n      oh3: ''\n    },\n    domestication_enzymes:[\n        'bsai',\n        'bpii',\n    ],\n    ohs: {\n      p5: {\n        name: 'P.5\\'',\n        oh: 'GGAG'\n      },\n      p3u5: {\n        name: 'P.3\\'-U.5\\'',\n        oh: 'TACT'\n      },\n      u3sp5: {\n        name: 'U.3\\'-SP.5\\'',\n        oh: 'AATG'\n      },\n      sp3cds5: {\n        name: 'SP.3\\'-CDS.5\\'',\n        oh: 'AGGT',\n        tc: true\n      },\n      cds3t5: {\n        name: 'CDS.3\\'-T.5\\'',\n        oh: 'GCTT',\n        stop: true\n      },\n      t3: {\n        name: 'T.3\\'',\n        oh: 'CGCT'\n      },\n    },\n  }\n}\n\nexport default L0DPartsStandards;\n","import {calculateTm} from 've-sequence-utils'\n\nexport function clearSequence(sequence){\n  return sequence.replace(/[^acgtACGT]/g, '');\n}\n\n\nexport function getReverseSequenceString(sequence){\n  return sequence.split(\"\").reverse().join(\"\");;\n}\n\nfunction complement(sequence){\n  return { A: 'T', T: 'A', G: 'C', C: 'G', a: 't', t: 'a', g: 'c', c: 'g' }[sequence];\n}\n\nexport function getComplementSequenceString(sequence){\n  return sequence.split('').map(complement).join('');\n}\n\n\nexport function getReverseComplementSequenceString(sequence){\n  return getReverseSequenceString(getComplementSequenceString(sequence));\n}\n\nexport function tmSeq(seq, tm){\n    if (seq.length >= 7){\n        let seq_final = \"minTempNotReached\"\n        for(let i = 7; i<seq.length; i++){\n            if (calculateTm(seq.substring(0,i)) > tm){\n                seq_final = seq.substring(0,i)\n                break\n            }\n        }\n        return seq_final\n    } else {\n        return 'minLengthError'\n    }\n}","import React, {Component} from 'react'\nimport Select from 'react-select'\n\nimport L0DPartsStandards from \"./components/L0D-parts-standards\"\n\nimport {\n    clearSequence,\n    getReverseComplementSequenceString,\n    tmSeq\n} from './components/Helpers'\nimport {\n    aliasedEnzymesByName,\n    getCutsitesFromSequence,\n    getAminoAcidFromSequenceTriplet,\n    aminoAcidToDegenerateDnaMap\n} from 've-sequence-utils'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\n\nclass Highlight extends Component {\n    render() {\n        if (this.props.text) {\n            let overlay_text = \"\"\n            switch (this.props.type) {\n                case 'eswen':\n                    overlay_text = \"Restriction site\"\n                    break\n                case 'doh':\n                    overlay_text = \"Domestication overhang\"\n                    break\n                case 'oh':\n                    overlay_text = \"Overhang\"\n                    break\n                case 'seq':\n                    overlay_text = \"Sequence\"\n                    break\n                case 'res':\n                    overlay_text = \"Internal restriction site\"\n                    break\n                case 'res_dom':\n                    overlay_text = \"Internal restriction site (domesticated)\"\n                    break\n                case 'tc':\n                    overlay_text = \"Overhang complement bases for frame conservation\"\n                    break\n                case 'stop':\n                    overlay_text = \"Stop codon\"\n                    break\n                default:\n                    break\n            }\n            if (this.props.extra)\n                overlay_text += \" \" + this.props.extra\n            return <OverlayTrigger key={\"ot\" + this.props.key} placement=\"top\" overlay={\n                <Tooltip id={\"id\" + this.props.key}>{overlay_text}</Tooltip>\n            }>\n                <span className={\"hl hl-\" + this.props.type}>{this.props.text}</span>\n            </OverlayTrigger>\n        }\n        return <i></i>\n    }\n}\n\n\nclass InputOHS extends Component {\n    render() {\n        const standard = L0DPartsStandards[this.props.standard]\n        return <Form.Select\n            onChange={this.props.handler}\n            value={this.props.cv}\n            aria-label={standard.name + \" OHs / \" + this.props.oh + \"'\"}\n            className=\"oh-select\" ref={\"ref\" + this.props.oh}>\n            {Object.keys(standard.ohs).map((key) => {\n                return (\n                    <option key={key}\n                            value={key}>{standard.ohs[key].name + \" - \" + standard.ohs[key].oh + (standard.ohs[key].tc ? ' [ ' + this.props.tc + ' ]' : '') + (standard.ohs[key].stop ? ' [ STOP ]' : '')}</option>\n                )\n            })}\n            <option key=\"custom\" value=\"custom\">Custom</option>\n        </Form.Select>\n    }\n}\n\nclass OHInput extends Component {\n    render() {\n        return <FloatingLabel controlId={\"ohs\" + this.props.oh}\n                              label={this.props.standard + \" OHs / \" + this.props.oh + \"'\"}>\n            <InputOHS\n                standard={this.props.standard}\n                oh={this.props.oh}\n                handler={this.props.handler}\n                cv={this.props.cv}\n                tc={this.props.tc}\n            />\n        </FloatingLabel>\n    }\n}\n\nclass Primer extends Component {\n    render() {\n        return <div className=\"alert alert-light border\">\n            <div>{this.props.name + \"-\" + this.props.type}\n            </div>\n            <div className=\"alert alert-info mb-3\">\n                <div className=\"small\"><strong>Primer length</strong>: {this.props.seq.length} bp <strong className=\"ms-2\">Copy name</strong>: <i className=\"bi bi-clipboard copy_clipboard\" data-cc={this.props.name + \"-\" + this.props.type}></i>\n                    <strong className=\"ms-2\">Copy sequence</strong>: <i className=\"bi bi-clipboard copy_clipboard\" data-cc={this.props.seq}></i>\n                </div>\n            </div>\n            <div className=\"alert alert-warning pe-4\">{this.props.seq}</div>\n        </div>\n    }\n}\n\nclass PrimerDesign extends Component {\n    render() {\n        const fragment_name = this.props.name + \"-F\" + (this.props.idx + 1)\n        let primers = []\n        const finalSeq = this.props.eswen + this.props.extra5 + this.props.template + this.props.extra3 + getReverseComplementSequenceString(this.props.eswen)\n        let method = \"pcr\"\n        let method_text = \"PCR\"\n        let tm_warning = \"\"\n        if (finalSeq.length <= this.props.pcrMinLength) {\n            method = \"oann\"\n            method_text = \"Oligo Annealing\"\n        }\n        if (method === \"oann\") {\n            primers.push(<Primer seq={finalSeq} name={fragment_name} type={\"FWD\"}/>)\n            primers.push(<Primer seq={getReverseComplementSequenceString(finalSeq)} name={fragment_name} type={\"REV\"}/>)\n        } else {\n            let tmSeq_dir = tmSeq(this.props.template, this.props.pcrTm)\n            let tmSeq_rc = tmSeq(getReverseComplementSequenceString(this.props.template), this.props.pcrTm)\n            if (tmSeq_dir === \"minTempNotReached\" || tmSeq_dir === \"minLengthError\") {\n                tmSeq_dir = this.props.template\n                tmSeq_rc = getReverseComplementSequenceString(this.props.template)\n                if (tmSeq_dir === \"minTempNotReached\")\n                    tm_warning = <div className=\"alert alert-danger\">Tm below min requirement</div>\n                if (tmSeq_dir === \"minLengthError\")\n                    tm_warning = <div className=\"alert alert-danger\">Template length below min requirement (7 bp)</div>\n            }\n            const finalSeq_fwd = this.props.eswen + this.props.extra5 + tmSeq_dir\n            primers.push(<Primer seq={finalSeq_fwd} name={fragment_name} type={\"FWD\"}/>)\n            const finalSeq_rev = this.props.eswen + getReverseComplementSequenceString(this.props.extra3) + tmSeq_rc\n            primers.push(<Primer seq={finalSeq_rev} name={fragment_name} type={\"REV\"}/>)\n            // primers.push(<Primer seq={getReverseComplementSequenceString(tmSeq_rc) + this.props.extra3 + getReverseComplementSequenceString(this.props.eswen) } name={fragment_name} type={\"R (RC)\"}/>)\n        }\n        return (<div className=\"alert alert-light border text-break\">\n            <h5>{fragment_name}</h5>\n            <div className=\"alert alert-info mb-3\">\n                <div className=\"small\"><strong>Method</strong>: {method_text}</div>\n                <div className=\"small\"><strong>Amplicon / Oligo annealing length</strong>: {finalSeq.length} bp</div>\n            </div>\n            {tm_warning}\n            {primers}\n        </div>)\n    }\n}\n\nclass ResEditor extends Component {\n    constructor(props) {\n        super(props)\n        if (props.new_res === undefined)\n            this.resInputHandle(this.props.res.idx, this.props.res.seq)\n    }\n\n    resInputHandle = (i, v) => {\n        this.props.resInputHandle(i, v)\n    }\n\n    getNucleotidesFromIUPAC(letter) {\n        switch (letter.toLowerCase()) {\n            case 'a':\n                return ['a']\n            case 't':\n                return ['t']\n            case 'c':\n                return ['c']\n            case 'g':\n                return ['g']\n            case 'r':\n                return ['g', 'a']\n            case 'y':\n                return ['t', 'c']\n            case 'm':\n                return ['a', 'c']\n            case 'k':\n                return ['g', 't']\n            case 's':\n                return ['g', 'c']\n            case 'w':\n                return ['a', 't']\n            case 'h':\n                return ['a', 'c', 't']\n            case 'b':\n                return ['g', 't', 'c']\n            case 'v':\n                return ['g', 'c', 'a']\n            case 'd':\n                return ['g', 'a', 't']\n            case 'n':\n                return ['g', 'a', 'c', 't']\n            default:\n                return letter\n        }\n    }\n\n    generateVariations(triplet) {\n        if (triplet.length === 1)\n            return this.getNucleotidesFromIUPAC(triplet)\n\n        const alternatives = []\n        const firstLetterVariations = this.getNucleotidesFromIUPAC(triplet.charAt(0))\n        const sub_alternatives = this.generateVariations(triplet.substring(1, triplet.length))\n\n        firstLetterVariations.forEach((firstLetterVariation) => {\n            sub_alternatives.forEach((sub_alternative) => {\n                alternatives.push(firstLetterVariation + sub_alternative)\n            })\n        })\n        return alternatives\n    }\n\n    getVariation(domesticate) {\n        if (domesticate.length !== 3) {\n            alert(\"Domestication site length != 3\")\n            return false\n        }\n        const triplet = aminoAcidToDegenerateDnaMap[getAminoAcidFromSequenceTriplet(domesticate).value.toLowerCase()]\n        const results = this.generateVariations(triplet)\n        let result = false\n        results.forEach((v) => {\n            if (v !== domesticate) {\n                result = v\n            }\n        })\n        return result\n    }\n\n    recommended_codon() {\n        const new_res = this.props.new_res\n        const res = this.props.res\n        if (new_res && new_res.length >= 3) {\n            let result = res.seq.substring(0, res.start % 3)\n            const domesticate = res.seq.substring(res.start % 3, res.start % 3 + 3)\n            const variation = this.getVariation(domesticate)\n            if (variation)\n                result += variation\n            else {\n                alert(\"No variation found\")\n                return res\n            }\n            result += res.seq.substring(res.start % 3 + 3, new_res.length)\n            return result\n        }\n        alert(\"No Restriction enzyme site set\")\n        return \"\"\n    }\n\n    render() {\n        if (this.props.res) {\n            let equal_warwing = \"\"\n            let res = this.props.res\n            let new_res = this.props.new_res ? this.props.new_res : \"\"\n\n            if (res.seq.toLowerCase() === new_res.toLowerCase())\n                equal_warwing = <div className=\"alert alert-danger\">Restriction site unchanged</div>\n            let diferent_length_warwing = \"\"\n\n            if (res.seq.length !== new_res.length && new_res.length > 0)\n                diferent_length_warwing =\n                    <div className=\"alert alert-warning\">New restriction site has different length than original</div>\n\n            let frame_string = \"\"\n            if (new_res) {\n                let start = new_res.substring(0, res.start % 3) + \"-\"\n                if (start.length === 1)\n                    start = \"\"\n                frame_string = \" (\" + start + new_res.substring(res.start % 3, res.start % 3 + 3) + \")\"\n            }\n            const recommended_codon = this.recommended_codon()\n\n            return <div className=\"alert alert-info border\">\n                <h5>Restriction site # {res.idx + 1}</h5>\n                <div className=\"row\">\n                    <div className=\"col-7\">\n                        <FloatingLabel controlId={\"resInput\" + res.idx} label=\"New restriction enzyme site\">\n                            <FormControl onChange={(e) => this.resInputHandle(res.idx, e.target.value)}\n                                         value={new_res} aria-label=\"New restriction enzyme site\"/>\n                        </FloatingLabel>\n                        <div className=\"mb-2\">\n                            <button type=\"button\" className=\"btn btn-secondary me-2\"\n                                    onClick={(e) => this.resInputHandle(res.idx, res.seq)}>Reset\n                            </button>\n                            <button type=\"button\" className=\"btn btn-success me-2\"\n                                    onClick={(e) => this.resInputHandle(res.idx, recommended_codon)}>Recommended\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"col-5\">\n                        <div className=\"mb-2 small\">\n                            <span><strong>Enzyme</strong>: {res.enzyme}</span><br/>\n                            <span><strong>Position</strong>: {(res.start + 1) + \" to \" + (res.end + 1)}</span><br/>\n                            <span><strong>Frame position</strong>: {((res.start % 3) + 1) + frame_string}</span><br/>\n                        </div>\n                    </div>\n                </div>\n                {equal_warwing}\n                {diferent_length_warwing}\n            </div>\n        } else {\n            return <div></div>\n        }\n    }\n}\n\nclass Fragments extends Component {\n    constructor(props) {\n        super(props)\n        let new_res = []\n        props.res.forEach((re) => {\n            new_res.push(re.seq)\n        })\n        this.state = {\n            new_res: new_res\n        }\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        let new_res = []\n        nextProps.res.forEach((re) => {\n            new_res.push(re.seq)\n        })\n        this.setState({\n            new_res: new_res\n        })\n    }\n\n    commonStart(seq1, seq2) {\n        let finalSeq = \"\"\n        for (var i = 0; i < Math.min(seq1.length, seq2.length); i++) {\n            if (seq1.charAt(i).toLowerCase() === seq2.charAt(i).toLowerCase()) {\n                finalSeq += seq1.charAt(i)\n            } else\n                break\n        }\n        return finalSeq\n    }\n\n    firstCommonIndexAfterDiff(ref, query) {\n        let firstIndex = null\n        let diffFound = false\n        if (ref.length === query.length)\n            for (var i = 0; i < query.length; i++) {\n                if (ref.charAt(i).toLowerCase() === query.charAt(i).toLowerCase())\n                    if (diffFound && ref.substring(i, query.length) === query.substring(i, query.length)) {\n                        firstIndex = i\n                        break\n                    } else\n                        diffFound = true\n            }\n        return firstIndex\n    }\n\n    lastCommonIndex(ref, query) {\n        let lastIndex = 0\n        for (var i = 0; i < Math.min(ref.length, query.length); i++) {\n            if (ref.charAt(i).toLowerCase() === query.charAt(i).toLowerCase())\n                lastIndex = i\n            else\n                break\n        }\n        return lastIndex\n    }\n\n    resParts(ref, query) {\n        const lastCommonIndex = this.lastCommonIndex(ref, query)\n        const firstCommonIndexAfterDiff = this.firstCommonIndexAfterDiff(ref, query)\n\n        let start = ref.substring(0, lastCommonIndex + 1)\n        let diff = \"\"\n        let end = \"\"\n        if (firstCommonIndexAfterDiff && firstCommonIndexAfterDiff > lastCommonIndex) {\n            diff = ref.substring(lastCommonIndex + 1, firstCommonIndexAfterDiff)\n            end = ref.substring(firstCommonIndexAfterDiff, query.length)\n        }\n\n        return {\n            'start': start,\n            'diff': diff,\n            'end': end,\n        }\n    }\n\n    resInputHandle = (i, v) => {\n        let new_res = this.state.new_res\n        new_res[i] = clearSequence(v)\n        this.setState({\n            new_res: new_res\n        })\n    }\n\n    formatOHEnd(seq, len) {\n        return seq.substring(0, seq.length - len).toLowerCase() + seq.substring(seq.length - len, seq.length).toUpperCase()\n    }\n\n    formatOH(seq, len) {\n        return seq.substring(0, len).toUpperCase() + seq.substring(len, seq.length).toLowerCase()\n    }\n\n    render() {\n        let output = []\n        let final_sequence = []\n        let final_sequence_txt = \"\"\n        let domestication_output = []\n        let fragments = []\n        let extra5 = \"\"\n        let extra3 = \"\"\n        let minOhLengthAlert = \"\"\n        let ohs = []\n        const stop_codon = 'tga'\n        const oh_length = Math.abs(this.props.the_re.topSnipOffset - this.props.the_re.bottomSnipOffset)\n\n        final_sequence.push(<Highlight text={this.props.eswen} type=\"eswen\" key=\"1\"\n                                       extra={\" (\" + this.props.the_re.name + \")\"}/>)\n        final_sequence_txt += this.props.eswen\n        final_sequence.push(<Highlight text={this.props.doh5} type=\"doh\" key=\"2\"/>)\n        final_sequence_txt += this.props.doh5\n        extra5 += this.props.doh5.toUpperCase()\n\n        if (this.props.doh5)\n            ohs.push(this.props.doh5)\n        else\n            ohs.push(this.props.oh5.oh)\n\n        final_sequence.push(<Highlight text={this.props.oh5.oh} type=\"oh\" key=\"3\"/>)\n        final_sequence_txt += this.props.oh5.oh\n        extra5 += this.props.oh5.oh.toUpperCase()\n\n        if (this.props.res.length) {\n            domestication_output.push(<h3>Domestication</h3>)\n            let from = 0\n            this.props.res.forEach((re, idx) => {\n                final_sequence.push(<Highlight text={this.props.seq.substring(from, re.start)} type=\"seq\"\n                                               extra={\" fragment \" + (idx + 1)} key={\"s-\" + idx}/>)\n                final_sequence_txt += this.props.seq.substring(from, re.start)\n                let template = this.props.seq.substring(from, re.start)\n\n                let type = \"res\"\n                let seq = re.seq\n                if (this.state.new_res[idx] && this.state.new_res[idx] !== re.seq) {\n                    type = \"res_dom\"\n                    seq = this.state.new_res[idx]\n                }\n                final_sequence.push(<Highlight text={seq} type={type} extra={\" # \" + (idx + 1)} key={\"r-\" + idx}/>)\n                final_sequence_txt += seq\n                template += this.commonStart(this.state.new_res[idx], re.seq)\n\n                if (idx) {\n                    // not the first\n                    const resParts = this.resParts(this.state.new_res[idx - 1], this.props.res[idx - 1].seq)\n                    extra5 = this.formatOH(resParts.diff, oh_length)\n                    template = this.formatOH(resParts.end + template, oh_length - extra5.length)\n                    ohs.push((resParts.diff + resParts.end + template).substring(0, oh_length).toUpperCase())\n                }\n\n                const resParts = this.resParts(this.state.new_res[idx], re.seq)\n                extra3 = this.formatOH((resParts.diff + resParts.end + this.props.seq.substring(re.end + 1, this.props.seq.length)).substring(0, oh_length), oh_length)\n                if (idx !== this.props.res.length - 1)\n                    template = this.formatOHEnd(template, oh_length - extra3.length)\n                if (extra3.length < oh_length)\n                    minOhLengthAlert = <div className=\"alert alert-danger\">OH length under optimal length</div>\n\n                fragments.push({\n                    idx: idx,\n                    extra5: extra5,\n                    template: template,\n                    extra3: extra3,\n                })\n                domestication_output.push(<ResEditor resInputHandle={this.resInputHandle}\n                                                     new_res={this.state.new_res[idx]} res={re}/>)\n                domestication_output.push(minOhLengthAlert)\n                from = re.end + 1\n\n                if (idx === this.props.res.length - 1) {\n                    // the last\n                    final_sequence.push(<Highlight text={this.props.seq.substring(re.end + 1, this.props.seq.length)}\n                                                   type=\"seq\"\n                                                   extra={\" fragment \" + (idx + 2)} key={\"s-\" + (idx + 1)}/>)\n                    final_sequence_txt += this.props.seq.substring(re.end + 1, this.props.seq.length)\n                    const resParts = this.resParts(this.state.new_res[idx], re.seq)\n                    extra5 = this.formatOH(resParts.diff, oh_length)\n                    template = this.formatOH(resParts.end + this.props.seq.substring(from, this.props.seq.length), oh_length - extra5.length)\n                    ohs.push((resParts.diff + resParts.end + template).substring(0, oh_length).toUpperCase())\n                    fragments.push({\n                        idx: idx + 1,\n                        extra5: extra5,\n                        template: template,\n                        extra3: \"\",\n                    })\n                }\n            })\n        } else {\n            final_sequence.push(<Highlight text={this.props.seq} type=\"seq\" key=\"s-1\"/>)\n            final_sequence_txt += this.props.seq\n            fragments.push({\n                idx: 0,\n                extra5: extra5,\n                template: this.props.seq.toLowerCase(),\n                extra3: \"\",\n            })\n        }\n\n        final_sequence.push(<Highlight text={this.props.oh3.tc ? this.props.tc : ''} type=\"tc\" key=\"6\"/>)\n        final_sequence_txt += this.props.oh3.tc ? this.props.tc : ''\n        extra3 = this.props.oh3.tc ? this.props.tc : ''\n        final_sequence.push(<Highlight text={this.props.oh3.stop ? stop_codon : ''} type=\"stop\" key=\"7\"/>)\n        final_sequence_txt += this.props.oh3.stop ? stop_codon : ''\n        extra3 += this.props.oh3.stop ? stop_codon : ''\n        final_sequence.push(<Highlight text={this.props.oh3.oh} type=\"oh\" key=\"8\"/>)\n        final_sequence_txt += this.props.oh3.oh\n        extra3 += this.props.oh3.oh.toUpperCase()\n        final_sequence.push(<Highlight text={this.props.doh3} type=\"doh\" key=\"9\"/>)\n        final_sequence_txt += this.props.doh3\n        extra3 += this.props.doh3.toUpperCase()\n        if (this.props.doh3)\n            ohs.push(this.props.doh3)\n        else\n            ohs.push(this.props.oh3.oh)\n        final_sequence.push(<Highlight text={getReverseComplementSequenceString(this.props.eswen)} type=\"eswen\"\n                                       key=\"10\" extra={\" (RevComp) (\" + this.props.the_re.name + \")\"}/>)\n        final_sequence_txt += getReverseComplementSequenceString(this.props.eswen)\n        fragments[fragments.length - 1].extra3 = extra3\n\n        let fragments_output = []\n        fragments.forEach((fragment) => {\n            fragments_output.push(<PrimerDesign name={this.props.name} pcrMinLength={this.props.pcrMinLength}\n                                                pcrTm={this.props.pcrTm} idx={fragment.idx} extra5={fragment.extra5}\n                                                extra3={fragment.extra3} template={fragment.template}\n                                                eswen={this.props.eswen}/>)\n        })\n\n        output.push(domestication_output)\n\n        output.push(<h3>Primer design</h3>)\n        output.push(fragments_output)\n\n        output.push(<h3>Ligation overhangs<i className=\"bi bi-clipboard copy_clipboard ms-2\" data-cc={ohs.join(\",\")}></i></h3>)\n        output.push(<div className=\"alert alert-light border text-break\">\n            <div className=\"mb-2\"><span>{ohs.join(\" / \")}</span></div>\n            <div><a href=\"https://ggtools.neb.com/viewset/run.cgi\" rel=\"noreferrer\"\n                    className=\"fs-6 badge bg-secondary fw-normal text-decoration-none\" target=\"_blank\">Ligation Fidelity\n                Viewer <i className=\"bi bi-box-arrow-up-right\"></i></a></div>\n        </div>)\n\n        output.push(<h3>Amplicon / Oligo annealing sequence<i className=\"bi bi-clipboard copy_clipboard ms-2\" data-cc={final_sequence_txt}></i></h3>)\n        output.push(<div className=\"alert alert-light border text-break\">{final_sequence}</div>)\n\n        return <div>{output}</div>\n    }\n}\n\nclass L0D extends Component {\n    constructor(props) {\n        super(props)\n        const default_standard = 'loop'\n        this.state = {\n            sequence: '',\n            standard: default_standard,\n            custom_oh5: '',\n            custom_oh3: '',\n            oh5: L0DPartsStandards[default_standard].default[5],\n            oh3: L0DPartsStandards[default_standard].default[3],\n            pcrTm: 60,\n            pcrMinLength: 80,\n            name: 'Part',\n            tc: 'tc',\n            base_pairs_from_end: 'aa',\n            enzymes: L0DPartsStandards[default_standard].domestication_enzymes,\n        }\n    }\n\n    tcInputChangeHandle = (event) => {\n        this.setState({\n            tc: event.target.value,\n        })\n    }\n\n    basePairsFromEndInputChangeHandle = (event) => {\n        this.setState({\n            base_pairs_from_end: event.target.value,\n        })\n    }\n\n\n    domEnzymesInputChangeHandle = (event) => {\n        let newEnzymes = []\n        event.forEach((enzyme) => {\n            newEnzymes.push(enzyme.value)\n        })\n        this.setState({\n            enzymes: newEnzymes,\n        })\n    }\n\n    pcrMinLengthInputChangeHandle = (event) => {\n        this.setState({\n            pcrMinLength: event.target.value,\n        })\n    }\n\n    pcrTmInputChangeHandle = (event) => {\n        this.setState({\n            pcrTm: event.target.value,\n        })\n    }\n\n    nameInputChangeHandle = (event) => {\n        this.setState({\n            name: event.target.value,\n        })\n    }\n\n    sequenceInputChangeHandle = (event) => {\n        this.setState({\n            sequence: clearSequence(event.target.value),\n        })\n    }\n\n    partStandardChangeHandle = (event) => {\n        const standard = L0DPartsStandards[event.target.value]\n        if (standard)\n            this.setState({\n                standard: event.target.value,\n                oh5: standard.default[5],\n                oh3: standard.default[3],\n                enzymes: standard.domestication_enzymes\n            })\n    }\n\n    OH5InputChangeHandle = (event) => {\n        this.setState({oh5: event.target.value})\n    }\n\n    OH3InputChangeHandle = (event) => {\n        this.setState({oh3: event.target.value})\n    }\n\n    customOh5InputHandle = (event) => {\n        this.setState({custom_oh5: clearSequence(event.target.value)})\n    }\n\n    customOh3InputHandle = (event) => {\n        this.setState({custom_oh3: clearSequence(event.target.value)})\n    }\n\n    partStandardInputItems = Object.keys(L0DPartsStandards).map(function (key) {\n        return <option key={key} value={key}>{L0DPartsStandards[key].name}</option>\n    })\n\n    getEnzymesSelect = (enzymes) => {\n        let domesticationEnzymesOutput = []\n        enzymes.forEach((enzyme) => {\n            domesticationEnzymesOutput.push({value: enzyme, label: aliasedEnzymesByName[enzyme].name})\n        })\n        return domesticationEnzymesOutput\n    }\n\n    findInFrame(targets, query) {\n        for (let t = 0; t < targets.length; t++) {\n            for (let q = 0; q < query.length; q = q + 3) {\n                if (targets[t].toLowerCase() === query.substring(q, q + 3).toLowerCase()) {\n                    return q\n                }\n            }\n        }\n        return false\n    }\n\n    componentDidUpdate() {\n        window.onReady()\n    }\n\n\n    render() {\n        const the_standard = L0DPartsStandards[this.state.standard]\n        const domesticationEnzymesOptions = []\n        Object.keys(aliasedEnzymesByName).forEach(function (k, v) {\n            if (aliasedEnzymesByName[k].isType2S)\n                domesticationEnzymesOptions.push({value: k, label: aliasedEnzymesByName[k].name})\n        })\n\n        let custom_oh5_input\n        if (this.state.oh5 === \"custom\") {\n            custom_oh5_input = <FloatingLabel controlId=\"customOh5Input\" label=\"Custom OH 5'\">\n                <FormControl onChange={this.customOh5InputHandle} value={this.state.custom_oh5}\n                             aria-label=\"Custom OH 5\"/>\n            </FloatingLabel>\n        }\n\n        let custom_oh3_input\n        if (this.state.oh3 === \"custom\") {\n            custom_oh3_input = <FloatingLabel controlId=\"customOh3Input\" label=\"Custom OH 3'\">\n                <FormControl onChange={this.customOh3InputHandle} value={this.state.custom_oh3}\n                             aria-label=\"Custom OH 3\"/>\n            </FloatingLabel>\n        }\n\n        const sequenceInput = this.state.sequence.toLowerCase()\n        let output = \"\"\n\n        if (!sequenceInput) {\n            output = <div className=\"alert alert-info\">Set a sequence to continue</div>\n        } else {\n            let RES = []\n            this.state.enzymes.forEach((enzyme_name) => {\n                RES.push(aliasedEnzymesByName[enzyme_name])\n            })\n            const cutSites = getCutsitesFromSequence(sequenceInput, true, RES)\n\n            let restrictionSites = []\n\n            if (Object.keys(cutSites).length) {\n                Object.entries(cutSites).forEach(([key, enzymeCuts]) => {\n                    enzymeCuts.forEach((enzymeCut, idx) => {\n                        const start = enzymeCut.recognitionSiteRange['start']\n                        const end = enzymeCut.recognitionSiteRange['end']\n                        if (start < end)\n                            restrictionSites.push({\n                                seq: sequenceInput.substring(enzymeCut.recognitionSiteRange['start'], enzymeCut.recognitionSiteRange['end'] + 1),\n                                start: start,\n                                end: end,\n                                enzyme: enzymeCut.name\n                            })\n                    })\n                    restrictionSites.sort(function (a, b) {\n                        return a.start - b.start\n                    })\n                    restrictionSites.forEach((restrictionSite, idx) => {\n                        restrictionSite.idx = idx\n                    })\n                })\n            }\n\n            const the_re = aliasedEnzymesByName[the_standard.enzyme]\n            const enzymeSiteWithExtraNucl = this.state.base_pairs_from_end + the_re.site.toUpperCase() + the_standard.bases_upto_snip\n\n            let oh5 = {\n                name: 'Custom',\n                oh: this.state.custom_oh5\n            }\n            if (this.state.oh5 !== \"custom\") {\n                oh5 = the_standard.ohs[this.state.oh5]\n            }\n            let oh3 = {\n                name: 'Custom',\n                oh: this.state.custom_oh3\n            }\n            if (this.state.oh3 !== \"custom\") {\n                oh3 = the_standard.ohs[this.state.oh3]\n            }\n\n            output = <Fragments name={this.state.name} pcrMinLength={this.state.pcrMinLength} pcrTm={this.state.pcrTm}\n                                the_re={the_re} res={restrictionSites} oh5={oh5} oh3={oh3}\n                                doh5={the_standard.receiver_ohs.oh5} doh3={the_standard.receiver_ohs.oh3}\n                                eswen={enzymeSiteWithExtraNucl} seq={sequenceInput} tc={this.state.tc}/>\n        }\n\n        let atg_output = <div className=\"alert alert-alert border\">No ATG found in frame 1</div>\n        let stop_output = <div className=\"alert alert-light border\">No STOP codon found in frame 1</div>\n\n        let atg_found = this.findInFrame(['atg'], sequenceInput)\n        let stop_found = this.findInFrame(['taa', 'tga', 'tag'], sequenceInput)\n\n        if (atg_found !== false)\n            atg_output = <div className=\"alert alert-success\">ATG found in frame 1, position {atg_found + 1}</div>\n\n        if (stop_found !== false)\n            stop_output =\n                <div className=\"alert alert-danger\">STOP codon found in frame 1, position {stop_found + 1}</div>\n\n        return (\n            <Container>\n                <Row>\n                    <Col lg={6}>\n                        <h3>Part name</h3>\n                        <FloatingLabel controlId=\"nameInput\" label=\"Name Input\">\n                            <FormControl onChange={this.nameInputChangeHandle}\n                                         value={this.state.name} aria-label=\"Name Input\"/>\n                        </FloatingLabel>\n                        <h3>Sequence ({this.state.sequence.length} bp)</h3>\n                        <FloatingLabel controlId=\"sequenceInput\" label=\"Sequence Input\">\n                            <FormControl onChange={this.sequenceInputChangeHandle} as=\"textarea\"\n                                         value={this.state.sequence} aria-label=\"Sequence Input\"/>\n                            <Form.Text className=\"text-muted\">\n                                Non ATGC characters are automatically removed.\n                            </Form.Text>\n                        </FloatingLabel>\n                        {atg_output}\n                        {stop_output}\n                        <h3>Position</h3>\n                        <FloatingLabel controlId=\"partStandardInput\" label=\"Assembly Standard\">\n                            <Form.Select onChange={this.partStandardChangeHandle} aria-label=\"Part standard input\">\n                                {this.partStandardInputItems}\n                            </Form.Select>\n                        </FloatingLabel>\n                        <OHInput standard={this.state.standard} oh=\"5\" cv={this.state.oh5}\n                                 handler={this.OH5InputChangeHandle} tc={this.state.tc}/>\n                        {custom_oh5_input}\n                        <OHInput standard={this.state.standard} oh=\"3\" cv={this.state.oh3}\n                                 handler={this.OH3InputChangeHandle} tc={this.state.tc}/>\n                        {custom_oh3_input}\n                        <h3>Domestication</h3>\n                        <Form.Text className=\"text-muted\">\n                            Domestication enzymes\n                        </Form.Text>\n                        <Select options={domesticationEnzymesOptions} value={this.getEnzymesSelect(this.state.enzymes)}\n                                isMulti className=\"basic-multi-select mb-2\" classNamePrefix=\"select\"\n                                onChange={this.domEnzymesInputChangeHandle}/>\n                        <FloatingLabel controlId=\"tcInput\"\n                                       label=\"Overhang complement bases for frame conservation\">\n                            <FormControl onChange={this.tcInputChangeHandle}\n                                         value={this.state.tc}\n                                         aria-label=\"Overhang complement bases for frame conservation\"/>\n                        </FloatingLabel>\n                        <h3>Method parameters</h3>\n                        <div>\n                            <FloatingLabel controlId=\"pcrMinLengthInput\"\n                                           label=\"Length under which part is prepared by oligo annealing instead of PCR\">\n                                <FormControl onChange={this.pcrMinLengthInputChangeHandle}\n                                             value={this.state.pcrMinLength} aria-label=\"pcr/oann min length\"/>\n                            </FloatingLabel>\n                            <FloatingLabel controlId=\"pcrTmInput\" label=\"Tm PCR primers °C\">\n                                <FormControl onChange={this.pcrTmInputChangeHandle}\n                                             value={this.state.pcrTm} aria-label=\"PCR Tm primers\"/>\n                            </FloatingLabel>\n                            <FloatingLabel controlId=\"basePairsFromEnd\" label=\"Base pairs from end\">\n                                <FormControl onChange={this.basePairsFromEndInputChangeHandle}\n                                             value={this.state.base_pairs_from_end} aria-label=\"Base pairs from end\"/>\n                            </FloatingLabel>\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div id=\"result\">\n                            {output}\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default L0D\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport L0D from './L0D-main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<React.StrictMode>\n    <L0D />\n    </React.StrictMode>,\n  document.getElementById('root-l0d')\n);\n"],"sourceRoot":""}